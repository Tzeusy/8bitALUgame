module mojo_top (
    input clk,              // 50MHz clock
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs
    input cclk,             // configuration clock, AVR ready when high
    output spi_miso,        // AVR SPI MISO
    input spi_ss,           // AVR SPI Slave Select
    input spi_mosi,         // AVR SPI MOSI
    input spi_sck,          // AVR SPI Clock
    output spi_channel [4], // AVR general purpose pins (used by default to select ADC channel)
    input avr_tx,           // AVR TX (FPGA RX)
    output avr_rx,          // AVR RX (FPGA TX)
    input avr_rx_busy,      // AVR RX buffer full
    input a,                //input 1
    input b,                //input 2
    input c,                //carryin
    input out1,             //sum
    input out2              //carryout
  ) {
  
  sig rst;                  // reset signal
  
  .clk(clk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
    
    .rst(rst){
      evaluation evaluater;
    }
  }
  
  always {
    evaluater.a = a;
    evaluater.b = b;
    evaluater.c = c;
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset
    led[0] = a;
    led[1] = b;
    led[2] = c;
    led[3] = out1;
    led[4] = out2;
    led[5] = evaluater.fpgasum;
    led[6] = evaluater.fpgacarry;
    led[7] = (evaluater.fpgasum==out1)&(evaluater.fpgacarry==out2);

    spi_miso = bz;          // not using SPI
    spi_channel = bzzzz;    // not using flags
    avr_rx = bz;            // not using serial port
  }
}