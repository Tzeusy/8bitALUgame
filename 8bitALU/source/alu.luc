module alu (
    input a[8],
    input b[8],
    input alufn[6],
    output sum[8]
  ) {

  comp comp1;
  eightbitfa eightbitfa1;
  shift shift1;
  boolean boolean1;
  
  always {
    eightbitfa1.a = a;
    eightbitfa1.b = b;
    comp1.v = eightbitfa1.v;
    comp1.n = eightbitfa1.n;
    comp1.z = eightbitfa1.z;
    shift1.a = a;
    shift1.b = b;
    boolean1.a = a;
    boolean1.b = b;
    eightbitfa1.alufn = alufn[0];
    comp1.alufn[0] = alufn[1];
    comp1.alufn[1] = alufn[2];
    shift1.alufn[0] = alufn[0];
    shift1.alufn[1] = alufn[1];
    boolean1.alufn[0] = alufn[0];
    boolean1.alufn[1] = alufn[1];
    boolean1.alufn[2] = alufn[2];
    boolean1.alufn[3] = alufn[3];
    
    case(alufn)
    {
      6b000000: sum = eightbitfa1.sum;
      6b000001: sum = eightbitfa1.sum;
      6b011000: sum = boolean1.gate;
      6b011110: sum = boolean1.gate;
      6b010110: sum = boolean1.gate;
      6b011010: sum = a;
      6b100000: sum = shift1.shifted;
      6b100001: sum = shift1.shifted;
      6b100011: sum = shift1.shifted;
      6b110011: sum = comp1.compared;
      6b110101: sum = comp1.compared;
      6b110111: sum = comp1.compared;
      default: sum = 0;
    }   
  }
}