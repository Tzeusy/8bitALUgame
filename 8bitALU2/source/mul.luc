module mul (
    input a[8],
    input b[8],
    output value[8]
  ) {

  sig total[8], b_store[8];
   
  // instantiate the adders for the cascading addition
  eightbitfa fa1;
  eightbitfa fa2;
  eightbitfa fa3;
  eightbitfa fa4;
  eightbitfa fa5;
  eightbitfa fa6;
  eightbitfa fa7;
  eightbitfa fa8;

  always {
  
    // set the adders to ADD
    fa1.alufn = 0;
    fa2.alufn = 0;
    fa3.alufn = 0;
    fa4.alufn = 0;
    fa5.alufn = 0;
    fa6.alufn = 0;
    fa7.alufn = 0;
    fa8.alufn = 0;

    
    b_store = b;
    total = 0;
    
   // for (i = 0; i < 8; i++){
      // for every value..
   //   for (j = i; j < 8; j++){
   //     partials[i][j] = a[j] & b[i]; // AND as it traverses through, store the partials 
   //   }
   // }
    
    // shift and add accordingly.
    // don't use the shift module as it will increase the circuit size.
    
    // if the multiplicand is 0, 
    // add multiplier to total.
    // else, 
    // ground the b.
    
    // shr multiplicand.

    if (a[0] == 1){
      fa1.a = total;
      fa1.b = b_store;
      total = fa1.sum;
    } else {
      fa1.a = total;
      fa1.b = 0;
    }
    
    b_store = b_store << 1;
    
    if (a[1] == 1){
      fa2.a = total;
      fa2.b = b_store;
      total = fa2.sum;
    } else {
      fa2.a = total;
      fa2.b = 0;
    }
    
    b_store = b_store << 1;
    
    if (a[2] == 1){
      fa3.a = total;
      fa3.b = b_store;
      total = fa3.sum;
    } else {
      fa3.a = total;
      fa3.b = 0;
    }
    
    b_store = b_store << 1;
    
    if (a[3] == 1){
      fa4.a = total;
      fa4.b = b_store;
      total = fa4.sum;
    } else {
      fa4.a = total;
      fa4.b = 0;
    }
    
    b_store = b_store << 1;
    
    if (a[4] == 1){
      fa5.a = total;
      fa5.b = b_store;
      total = fa5.sum;
    } else {
      fa5.a = total;
      fa5.b = 0;
    }
    
    b_store = b_store << 1;
    
    if (a[5] == 1){
      fa6.a = total;
      fa6.b = b_store;
      total = fa6.sum;
    } else {
      fa6.a = total;
      fa6.b = 0;
    }
    
    b_store = b_store << 1;
    
    if (a[6] == 1){
      fa7.a = total;
      fa7.b = b_store;
      total = fa7.sum;
    } else {
      fa7.a = total;
      fa7.b = 0;
    }
    
    b_store = b_store << 1;
    
    if (a[7] == 1){
      fa8.a = total;
      fa8.b = b_store;
      total = fa8.sum;
    } else {
      fa8.a = total;
      fa8.b = 0;
    }
    
    b_store = b_store << 1;

    value = total;
  }
}
