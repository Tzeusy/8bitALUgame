module eightbitfa (

    input a[8],
    input b[8],
    output sum[8],
    input alufn,
    output v,
    output z,
    output n
  ) {
  
  fa fa1;
  fa fa2;
  fa fa3;
  fa fa4;
  fa fa5;
  fa fa6;
  fa fa7;
  fa fa8;
  sig x[8];
  var i;
  
  always {
    
    for(i = 0; i < 8; i++){
      x[i] = b[i] ^ alufn;
    }
    //x[7:0] = b[7:0]^alufn;    
    fa1.c = alufn;
    
    fa1.a=a[0];
    fa1.b=x[0];
    fa2.a=a[1];
    fa2.b=x[1];
    fa3.a=a[2];
    fa3.b=x[2];
    fa4.a=a[3];
    fa4.b=x[3];
    fa5.a=a[4];
    fa5.b=x[4];
    fa6.a=a[5];
    fa6.b=x[5];
    fa7.a=a[6];
    fa7.b=x[6];
    fa8.a=a[7];
    fa8.b=x[7];
   
    fa2.c = fa1.carryout;
    fa3.c = fa2.carryout;
    fa4.c = fa3.carryout;
    fa5.c = fa4.carryout;
    fa6.c = fa5.carryout;
    fa7.c = fa6.carryout;
    fa8.c = fa7.carryout;
    
    sum[0]=fa1.sum;
    sum[1]=fa2.sum;
    sum[2]=fa3.sum;        
    sum[3]=fa4.sum;    
    sum[4]=fa5.sum;
    sum[5]=fa6.sum;
    sum[6]=fa7.sum;
    sum[7]=fa8.sum;
    
    z=~(fa1.sum|fa2.sum|fa3.sum|fa4.sum|fa5.sum|fa6.sum|fa7.sum|fa8.sum);    
    v=((a[7] & x[7] & (~fa8.sum)) | ((~a[7]) & (~x[7]) & fa8.sum));
    n=fa8.sum;
  }
}
